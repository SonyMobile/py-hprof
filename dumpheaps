#!/usr/bin/env python3
#coding=utf8

import hprof

def _shorten(s, maxlength):
	l = len(s)
	if l > maxlength:
		return s[:min(l, maxlength-3)] + '...'
	return s

def dump(hfile):
	for di, dump in enumerate(hfile.dumps()):
		for hi, heap in enumerate(dump.heaps()):
			info = 'DUMP %d, HEAP %d (type=%d name=%s)' % (di, hi, heap.type, heap.name)
			for obj in heap.objects():
				print(info, obj)

if __name__ == '__main__':
	import sys
	for filename in sys.argv[1:]:
		stars = max(0, (96 - len(filename)))
		lstars = stars // 2
		rstars = stars - lstars
		print(lstars * '*' + '* ' + filename + ' *' + rstars * '*')
		with hprof.open(filename) as hf:
			dump(hf)
